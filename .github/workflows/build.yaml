name: Build

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:
    inputs:
      bump:
        description: 'The type of version bump: patch, minor, major'
        required: false
        default: 'patch'

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Linting
        run: npm run lint

      - name: Run tests and collect coverage
        run: npm run test:coverage

      - name: Build the package
        run: npm run build

      - name: Upload coverage report to workspace
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/lcov.info

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Download coverage report from workspace
        uses: actions/download-artifact@v4
        with:
          name: coverage
          path: coverage
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

  release:
    needs: ci
    runs-on: ubuntu-latest
    environment:
      name: production
    permissions:
      contents: write
      issues: write
      packages: write
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/prerelease')
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PAT }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
